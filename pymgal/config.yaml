# You should probably overwrite this with the right coordinates from a halo file.
coords:  [500000, 500000, 500000, 1000]                                      # The coordinates [x, y, z, r] of the projection region. (x, y, z) is the centre of the projection region and r is its radius


# These parameters help you define your chosen models, filters, and output values
SSP_model: "bc03_ssp"                                                       # The simple stellar population (SSP) model you want to use. Full list can be found at pymgal//models
IMF: "chab"                                                                 # The initial mass function (IMF) assumed by the SSP model. Can be either "chab", "krou", or  "salp" (ie Chabrier, Kroupa, or Salpeter)
dust_func: "calzetti"                                                             # The assumed dust function. Can be either null, "charlot_fall" or "calzetti" (ie Charlot and Fall (2000)  or Calzetti et al (2000))
filters: ["sdss_r"]                                                         # The telescope filters you want to mimic in your mock observations
out_val: "magnitude"                                                             # The output units. Can be "flux" (erg/s/cm^2), "jy" (jansky), "Fv" (erg/s/cm^2/Hz), "Fl" (erg/s/cm^2/angstrom), or "magnitude". Case insensitive
mag_type: "AB"                                                              # If outval is "magnitude", specify between "AB", "vega", "solar", "AB_app", "vega_app", or "solar_app". If out_val != "magnitude", this does nothing.


# These parameters help you define your projection angles
num_random_proj: 0                                                          # The number of random projections you want. Can be 0. NOTE: setting num_random_proj = 0, proj_vecs = null, and proj_angles = null will cause an error.
proj_vecs: ["x", [0.577, 0.577, 0.577]]                                                              # A list projection vectors. Can be "x", "y", "z" (principal axes), and/or a custom [x, y, z] in cartesian. Can be null.
proj_angles: [[30,0,0]]                                                    # A list of angles [alpha, beta, gamma] (deg) used to rotate around the x, y, z axes respectively. Does the same task as proj_vecs, so you can use either/both. Can be null.


# These are some additional miscellaneous parameters 
rest_frame: True                                                           # If True, results are in rest frame. Otherwise, they are in observer's frame.
AR: 1.2                                                                     # Angular resolution (arcsec). If null, it is automatically calculated. If AR is null and npx is "auto", npx defaults to 512
ksmooth: 30                                                                 # A smoothing parameter of at least 0 used in kNN Gaussian smoothing. The greater ksmooth, the smoother.
g_soft: 5                                                                   # The gravitational softening length of the simulation in comoving (kpc/h). Limits smoothing for mass/age/metal maps. If null, mass/age/metal are smoothed like light
z_obs: 0.10                                                                 # The distance of the observation from the observer's POV. This DOES NOT affect age/evolution, only the apparent distance. If null, it defaults to max(0.05, sim z) 
npx: 256                                                                    # The number of pixels in the output image. Can also be set to "auto" which will automatically decide the pixel number to include all particles
zthick: null                                                               # The thickness cut ([center-zthick, center+zthick]) in the projection direction in kpc/h. If null, all the data is used (ie no cut is applied)
ncpu: 16                                                                     # The number of CPUs used in parallel processes
outmas: False                                                                # Output the mass map corresponding to your data
outage: False                                                                # Output the age map corresponding to your data
outmet: False                                                                # Output the metallicity map corresponding to your data                                                                         
